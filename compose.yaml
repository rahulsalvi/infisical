# vim: ft=yaml.docker-compose
---
name: infisical

include:
  - ext/docker-compose-snippets/tailscale-caddy.yaml
  - ext/docker-compose-snippets/simple-reverse-proxy.yaml

services:
  infisical:
    image: infisical/infisical:latest-postgres
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      valkey:
        condition: service_started
    environment:
      HOST: localhost
      PORT: 8080
      SITE_URL: https://${COMPOSE_PROJECT_NAME}.ipn.rahulsalvi.com
      HTTPS_ENABLED: true
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      AUTH_SECRET: ${AUTH_SECRET}
      REDIS_URL: valkey://localhost:6379
      DB_CONNECTION_URI: postgres://${COMPOSE_PROJECT_NAME}:${POSTGRES_PASSWORD}@localhost:5432/${COMPOSE_PROJECT_NAME}
      TELEMETRY_ENABLED: false
    extends:
      file: ext/docker-compose-snippets/tailscale-app-base.yaml
      service: tailscale-app-base

  valkey:
    image: valkey/valkey:latest
    restart: unless-stopped
    volumes:
      - valkey-data:/data
    extends:
      file: ext/docker-compose-snippets/tailscale-app-base.yaml
      service: tailscale-app-base

  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${COMPOSE_PROJECT_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${COMPOSE_PROJECT_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready --username=${COMPOSE_PROJECT_NAME} && psql --username=${COMPOSE_PROJECT_NAME} --list"
      interval: 5s
      timeout: 10s
      retries: 10
    extends:
      file: ext/docker-compose-snippets/tailscale-app-base.yaml
      service: tailscale-app-base

volumes:
  postgres-data:
  valkey-data:
